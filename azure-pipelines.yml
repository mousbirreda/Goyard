trigger:
  branches:
    include:
    - main # ou la branche de votre choix

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
- task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
  inputs:
    terraformVersion: '1.0.2'  # Choisissez votre version de Terraform

- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    backendServiceArm: 'ConnexionDeServiceAzure' # Remplacez par le nom de votre connexion de service Azure
    ensureBackend: true

- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    environmentServiceNameAzureRM: 'ConnexionDeServiceAzure'

- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    environmentServiceNameAzureRM: 'ConnexionDeServiceAzure'
    commandOptions: '-auto-approve'
